/*
 * IIC_User.c
 *
 *  Created on: 2022年4月5日
 *      Author: 19080
 */
#include "IIC_User.h"
#include "gpio.h"
#define SDA_High() HAL_GPIO_WritePin(IIC_SDA_GPIO_Port, IIC_SDA_Pin, GPIO_PIN_SET)
#define SDA_Low() HAL_GPIO_WritePin(IIC_SDA_GPIO_Port, IIC_SDA_Pin, GPIO_PIN_RESET)
#define SCL_High() HAL_GPIO_WritePin(IIC_SCL_GPIO_Port, IIC_SCL_Pin, GPIO_PIN_SET)
#define SCL_Low() HAL_GPIO_WritePin(IIC_SCL_GPIO_Port, IIC_SCL_Pin, GPIO_PIN_RESET)
const unsigned char  OLED_init_cmd[25]=
{
  /*0xae,0X00,0X10,0x40,0X81,0XCF,0xff,0xa1,0xa4,
  0xA6,0xc8,0xa8,0x3F,0xd5,0x80,0xd3,0x00,0XDA,0X12,
  0x8d,0x14,0xdb,0x40,0X20,0X02,0xd9,0xf1,0xAF*/
      0xAE,//关闭显示

      0xD5,//设置时钟分频因子,震荡频率
      0x80,  //[3:0],分频因子;[7:4],震荡频率

      0xA8,//设置驱动路数
      0X3F,//默认0X3F(1/64)

      0xD3,//设置显示偏移
      0X00,//默认为0
      0x40,//设置显示开始行 [5:0],行数.

      0x8D,//电荷泵设置
      0x14,//bit2，开启/关闭

      0x20,//设置内存地址模式
      0x02,//[1:0],00，列地址模式   01,行地址模式   10,页地址模式;默认10;

      0xA1,//段重定义设置,bit0:0,0->0;1,0->127;  左右反转
  	  0xC8,//设置COM扫描方向;bit3:0,普通模式;1,重定义模式 COM[N-1]->COM0;N:驱动路数 上下反转

      0xDA,//设置COM硬件引脚配置
      0x12,//[5:4]配置

      0x81,//对比度设置
      0xEF,//1~255;默认0X7F (亮度设置,越大越亮)

      0xD9,//设置预充电周期
      0xf1,//[3:0],PHASE 1;[7:4],PHASE 2;

      0xDB,//设置VCOMH 电压倍率
      0x30,//[6:4] 000,0.65*vcc;001,0.77*vcc;011,0.83*vcc;

      0xA4,//全局显示开启;bit0:1,开启;0,关闭;(白屏/黑屏)
      0xA6,//设置显示方式;bit0:1,反相显示;0,正常显示
      0xAF,//开启显示
};
void IIC_Delay()
{int m;
  m=65535;
  while(m--);


}
void IIC_Start()
{ SCL_Low();
  SDA_High();
  IIC_Delay()
  SCL_High();
  SDA_Low();
  IIC_Delay()
}

void IIC_Stop()
{SCL_Low();
 SDA_Low();
 SCL_High();
 IIC_Delay()
 SDA_High();
 IIC_Delay()
}

void IIC_Ack()
{SDA_Low();
 SCL_Low();
 SCL_High();
 IIC_Delay()
 }

void IIC_NAck()
{  SDA_High();
   SCL_Low();
   SCL_High();
   IIC_Delay()

}

void IIC_SendByte(unsigned char byt)
{
    unsigned char i;

    for(i=0; i<8; i++)
    {
        SCL_Low();
        IIC_Delay()
        if(byt & 0x80)
        	SDA_High();
        else
        	SDA_Low();
        IIC_Delay()
        SCL_High();
        byt <<= 1;				//从最高位开始传输数据
        IIC_Delay()
    }
    SCL_Low();
}

void IIC_WaitAck(void)
{

	unsigned char ackbit;
	SDA_High();				//新加，释放数据总线
	IIC_Delay();
    SCL_High();
	IIC_Delay()
    ackbit = HAL_GPIO_ReadPin(IIC_SDA_GPIO_Port, IIC_SDA_Pin);
	if(ackbit)				//新加，若无应答，则停止总线
		IIC_Stop();
    SCL_Low();
    IIC_Delay();
}

void OLED_WriteCmd(unsigned char cmd)
{
   IIC_Start();
   IIC_SendByte(0x78);
   IIC_WaitAck();
   IIC_SendByte(0x00);
   IIC_WaitAck();
   IIC_SendByte(cmd);
   IIC_WaitAck();
   IIC_Stop();

}

void OLED_WriteData(unsigned char data)
{
	IIC_Start();
	   IIC_SendByte(0x78);
	   IIC_WaitAck();
	   IIC_SendByte(0x40);
	   IIC_WaitAck();
	   IIC_SendByte(data);
	   IIC_WaitAck();
	   IIC_Stop();
}

void OLED_Init()
{ unsigned char i;
  for(i=0;i<25;i++)
     {
	  OLED_WriteCmd(OLED_init_cmd[i]);
     }


}

void Column_set(unsigned char column)//列地址
{
	OLED_WriteCmd(0x10|(column>>4));    //设置列地址高位
	OLED_WriteCmd(0x00|(column&0x0f));   //设置列地址低位
}
void Page_set(unsigned char page)//页地址
{
	OLED_WriteCmd(0xB0+page);
}

